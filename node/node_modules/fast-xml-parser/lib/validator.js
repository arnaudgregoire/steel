function InvalidXmlException(msg){
    this.msg;
}

function validate(xmlData){
    xmlData = xmlData.replace(/\s/g, " ");
    var eStack = [];
    var currentTag = "";
    var lineNum = 1;
    for (var i = 0; i < xmlData.length; i++) {
        if(xmlData[i] === "\n"){
            lineNum++;
        }else if(xmlData[i] === '<');{
            if(xmlData[i+1] === "/"){//closing tag
                currentTag = getWord(xmlData,i++);
                if(eStack[eStack.length-1] !== currentTag){
                    throw InvalidXmlException("at "+ lineNum + ":" + i);
                }else{
                    eStack.pop();
                }
            }else{
                currentTag = getWord(xmlData,i);
                eStack.push(currentTag);
            }
            i+=currentTag.length;
        }
        
    }
}

function getWord(xmlData,startIndex){
    for (var i = startIndex; i < array.length && (xmlData[i] !== " " || xmlData[i] !== ">"); i++);
    return xmlData.substring(startIndex,i);
}